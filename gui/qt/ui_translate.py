# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/yuh/code/test/pyqt/translate.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets

from api import tools, config, translate, locale_config
from api.locale_config import get_locale_ui_data as locale_ui


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 360)
        MainWindow.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint)

        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon/icon.svg"))
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.te_from = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.te_from.setObjectName("te_from")
        self.verticalLayout.addWidget(self.te_from)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.cbb_translate_server = QtWidgets.QComboBox(self.centralwidget)
        self.cbb_translate_server.setObjectName("cbb_translate")
        self.horizontalLayout.addWidget(self.cbb_translate_server)

        self.cbb_translate_to_lang = QtWidgets.QComboBox(self.centralwidget)
        self.cbb_translate_to_lang.setObjectName("cbb_translate_to_lang")
        self.horizontalLayout.addWidget(self.cbb_translate_to_lang)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        spacerItem = QtWidgets.QSpacerItem(40, 20,
                                           QtWidgets.QSizePolicy.Expanding,
                                           QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.cb_add = QtWidgets.QCheckBox(self.centralwidget)
        self.cb_add.setObjectName("cb_add")
        self.horizontalLayout.addWidget(self.cb_add)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.te_to = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.te_to.setObjectName("te_to")
        self.verticalLayout.addWidget(self.te_to)
        MainWindow.setCentralWidget(self.centralwidget)

        self.te_from.copyAvailable.connect(self.from_copy)
        self.te_to.copyAvailable.connect(self.to_copy)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def from_copy(self, is_selected):
        translate.set_no_translate_this(is_selected)

    def to_copy(self, is_selected):
        translate.set_no_translate_this(is_selected)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "兰译"))

        self.pushButton.setText(
            _translate("MainWindow", locale_ui("btn_translate_label")))
        self.cb_add.setText(_translate("MainWindow",
                                       locale_ui("cb_add_label")))

        self.cbb_translate_to_lang.currentIndexChanged.connect(
            self.on_cbb_tanslate_lang_changed)

        translate_server_dict = tools.get_translate_server_dict_by_locale()

        for key in translate_server_dict.keys():
            self.cbb_translate_server.addItem(key, translate_server_dict[key])
        s = tools.get_current_translate_server_locale()
        self.cbb_translate_server.setCurrentText(s)
        self.cbb_translate_server.currentIndexChanged.connect(
            self.on_cbb_tanslate_server_changed)
        self.set_cbb_tanslate_to_lang_data()

        self.te_to.setPlainText(
            _translate("MainWindow", locale_ui("notice_to")))
        self.te_from.setPlainText(
            _translate("MainWindow", locale_ui("notice_from")))
        self.pushButton.clicked.connect(self.btnTranslate)

    def on_cbb_tanslate_lang_changed(self):
        tools.set_to_lang(self.cbb_translate_to_lang.currentData())

        # self.btnTranslate()

    def set_cbb_tanslate_to_lang_data(self):
        self.cbb_translate_to_lang.clear()

        to_lang_dict = tools.get_to_lang_dict_by_locale()

        for key in to_lang_dict.keys():
            self.cbb_translate_to_lang.addItem(key, to_lang_dict[key])
        self.cbb_translate_to_lang.setCurrentText(
            tools.get_current_to_lang_locale())

    def on_cbb_tanslate_server_changed(self):
        tools.set_translate_server(self.cbb_translate_server.currentData())

        self.set_cbb_tanslate_to_lang_data()

    def isAdd(self):
        add = self.cb_add.isChecked()
        print(add)
        return add

    def translate_text(self, text_from=None, text_to=None):
        text_from, text_to = translate.text(text_from, add_old=self.isAdd())

        if (len(text_from.strip()) > 0 and len(text_to.strip()) > 0):
            self.te_from.setPlainText(text_from)
            self.te_to.setPlainText(text_to)

    def btnTranslate(self):
        text_from = self.te_from.toPlainText()
        text_to = self.te_to.toPlainText()
        self.translate_text(text_from, text_to)
