# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/yuh/code/my/ldr-translator/gui/qt/ui_preferences.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from api import config, translate, tools
from api.server import baidu
from PyQt5.QtWidgets import QMainWindow


class Ui_MainWindow(QMainWindow):

    def setupUi(self, MainWindow):
        MainWindow.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint)

        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon/setting.svg"))
        MainWindow.setWindowIcon(icon)
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(360, 280)
        MainWindow.setMinimumSize(QtCore.QSize(360, 280))
        MainWindow.setMaximumSize(QtCore.QSize(600, 280))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(360, 280))
        self.centralwidget.setMaximumSize(QtCore.QSize(600, 280))
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lb_translate = QtWidgets.QLabel(self.centralwidget)
        self.lb_translate.setMinimumSize(QtCore.QSize(0, 18))
        self.lb_translate.setMaximumSize(QtCore.QSize(16777215, 18))
        self.lb_translate.setObjectName("lb_translate")
        self.verticalLayout.addWidget(self.lb_translate)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lb_ai = QtWidgets.QLabel(self.centralwidget)
        self.lb_ai.setMinimumSize(QtCore.QSize(60, 18))
        self.lb_ai.setMaximumSize(QtCore.QSize(60, 18))
        self.lb_ai.setObjectName("lb_ai")
        self.horizontalLayout.addWidget(self.lb_ai)
        self.le_ai = QtWidgets.QLineEdit(self.centralwidget)
        self.le_ai.setMinimumSize(QtCore.QSize(200, 30))
        self.le_ai.setMaximumSize(QtCore.QSize(16777215, 30))
        self.le_ai.setObjectName("le_ai")
        self.horizontalLayout.addWidget(self.le_ai)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout1 = QtWidgets.QHBoxLayout()
        self.horizontalLayout1.setObjectName("horizontalLayout1")
        self.lb_sk = QtWidgets.QLabel(self.centralwidget)
        self.lb_sk.setMinimumSize(QtCore.QSize(60, 18))
        self.lb_sk.setMaximumSize(QtCore.QSize(60, 18))
        self.lb_sk.setObjectName("lb_sk")
        self.horizontalLayout1.addWidget(self.lb_sk)
        self.le_sk1 = QtWidgets.QLineEdit(self.centralwidget)
        self.le_sk1.setMinimumSize(QtCore.QSize(200, 30))
        self.le_sk1.setMaximumSize(QtCore.QSize(16777215, 30))
        self.le_sk1.setObjectName("le_sk1")
        self.horizontalLayout1.addWidget(self.le_sk1)
        self.verticalLayout.addLayout(self.horizontalLayout1)
        self.horizontalLayout2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout2.setObjectName("horizontalLayout2")
        self.btn_save_translate = QtWidgets.QPushButton(self.centralwidget)
        self.btn_save_translate.setObjectName("btn_save_translate")
        self.horizontalLayout2.addWidget(self.btn_save_translate)
        self.lb_msg_translate = QtWidgets.QLabel(self.centralwidget)
        self.lb_msg_translate.setText("")
        self.lb_msg_translate.setObjectName("lb_msg_translate")
        self.horizontalLayout2.addWidget(self.lb_msg_translate)
        spacerItem = QtWidgets.QSpacerItem(40, 18,
                                           QtWidgets.QSizePolicy.Expanding,
                                           QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout2.addItem(spacerItem)
        self.lb_how_translate = QtWidgets.QLabel(self.centralwidget)
        self.lb_how_translate.setObjectName("lb_how_translate")
        self.horizontalLayout2.addWidget(self.lb_how_translate)
        self.verticalLayout.addLayout(self.horizontalLayout2)

        self.lb_ocr = QtWidgets.QLabel(self.centralwidget)
        self.lb_ocr.setMinimumSize(QtCore.QSize(0, 18))
        self.lb_ocr.setMaximumSize(QtCore.QSize(16777215, 18))
        self.lb_ocr.setObjectName("lb_ocr")
        self.verticalLayout.addWidget(self.lb_ocr)
        self.horizontalLayout3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout3.setObjectName("horizontalLayout3")
        self.lb_ak = QtWidgets.QLabel(self.centralwidget)
        self.lb_ak.setMinimumSize(QtCore.QSize(60, 18))
        self.lb_ak.setMaximumSize(QtCore.QSize(60, 18))
        self.lb_ak.setObjectName("lb_ak")
        self.horizontalLayout3.addWidget(self.lb_ak)
        self.le_ak = QtWidgets.QLineEdit(self.centralwidget)
        self.le_ak.setMinimumSize(QtCore.QSize(200, 30))
        self.le_ak.setMaximumSize(QtCore.QSize(16777215, 30))
        self.le_ak.setObjectName("le_ak")
        self.horizontalLayout3.addWidget(self.le_ak)
        self.verticalLayout.addLayout(self.horizontalLayout3)
        self.horizontalLayout4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout4.setObjectName("horizontalLayout4")
        self.lb_sk2 = QtWidgets.QLabel(self.centralwidget)
        self.lb_sk2.setMinimumSize(QtCore.QSize(60, 18))
        self.lb_sk2.setMaximumSize(QtCore.QSize(60, 18))
        self.lb_sk2.setObjectName("lb_sk2")
        self.horizontalLayout4.addWidget(self.lb_sk2)
        self.le_sk2 = QtWidgets.QLineEdit(self.centralwidget)
        self.le_sk2.setMinimumSize(QtCore.QSize(200, 30))
        self.le_sk2.setMaximumSize(QtCore.QSize(16777215, 30))
        self.le_sk2.setObjectName("le_sk2")
        self.horizontalLayout4.addWidget(self.le_sk2)
        self.verticalLayout.addLayout(self.horizontalLayout4)
        self.horizontalLayout5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout5.setObjectName("horizontalLayout5")
        self.btn_save_ocr = QtWidgets.QPushButton(self.centralwidget)
        self.btn_save_ocr.setObjectName("btn_save_ocr")
        self.horizontalLayout5.addWidget(self.btn_save_ocr)
        self.lb_msg_ocr = QtWidgets.QLabel(self.centralwidget)
        self.lb_msg_ocr.setText("")
        self.lb_msg_ocr.setObjectName("lb_msg_ocr")
        self.horizontalLayout5.addWidget(self.lb_msg_ocr)
        spacerItem1 = QtWidgets.QSpacerItem(40, 18,
                                            QtWidgets.QSizePolicy.Expanding,
                                            QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout5.addItem(spacerItem1)
        self.lb_how_ocr = QtWidgets.QLabel(self.centralwidget)
        self.lb_how_ocr.setObjectName("lb_how_ocr")
        self.horizontalLayout5.addWidget(self.lb_how_ocr)
        self.verticalLayout.addLayout(self.horizontalLayout5)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "百度翻译设置"))
        self.lb_translate.setText(_translate("MainWindow", "翻译api"))
        self.lb_ai.setText(_translate("MainWindow", "AppId"))
        self.lb_sk.setText(_translate("MainWindow", "SecretKey"))
        self.btn_save_translate.setText(_translate("MainWindow", "保存"))
        self.lb_how_translate.setText(_translate("MainWindow", "如何获取"))
        self.lb_ocr.setText(_translate("MainWindow", "图片识别api"))
        self.lb_ak.setText(_translate("MainWindow", "ApiKey"))
        self.lb_sk2.setText(_translate("MainWindow", "SecretKey"))
        self.btn_save_ocr.setText(_translate("MainWindow", "保存"))
        self.lb_how_ocr.setText(_translate("MainWindow", "如何获取"))

        self.load_data()
        self._listen()

    def load_data(self):
        self.lb_how_translate.setOpenExternalLinks(True)
        self.lb_how_ocr.setOpenExternalLinks(True)

        config_api = config.get_config_section(config.config_sections_baidu)

        self.le_ai.setText(config_api["translate_app_id"])
        self.le_sk1.setText(config_api["translate_secret_key"])
        self.le_ak.setText(config_api["ocr_api_key"])
        self.le_sk2.setText(config_api["ocr_secret_key"])

        url_translate = "<a href='" + baidu.how_get_url_translate + "'>如何获取？</a>"
        url_ocr = "<a href='" + baidu.how_get_url_ocr + "'>如何获取？</a>"

        self.lb_how_translate.setText(url_translate)
        self.lb_how_ocr.setText(url_ocr)

    def _listen(self):
        self.btn_save_translate.clicked.connect(self.save_baidu_translate)
        self.btn_save_ocr.clicked.connect(self.save_baidu_ocr)

    def save_baidu_translate(self, btn=None):

        ok = True
        server = "baidu"
        text_a = self.le_ai.text()
        text_b = self.le_sk1.text()

        msg = "超时或账号密码错误"

        if (len(text_a) == 0 or len(text_b) == 0):
            msg = "已恢复默认（不推荐）"
        else:
            ok, text_a, text_b = translate.check_server_translate(
                server, text_a, text_b)
            self.le_ai.setText(text_a)
            self.le_sk1.setText(text_b)
            if (ok):
                msg = "成功，已保存"

        if (ok):

            config.set_config(server, "translate_app_id", text_a)
            config.set_config(server, "translate_secret_key", text_b)
        self.lb_msg_translate.setText(msg)

    def save_baidu_ocr(self, btn=None):
        ok = True
        server = config.config_sections_baidu

        text_a = self.le_ak.text()
        text_b = self.le_sk2.text()

        msg = "超时或账号密码错误"

        if (len(text_a) == 0 or len(text_b) == 0):
            msg = "已恢复默认（不推荐）"
        else:
            ok, text_a, text_b = translate.check_server_ocr(
                server, text_a, text_b)
            self.le_ak.setText(text_a)
            self.le_sk2.setText(text_b)
            if (ok):
                msg = "成功，已保存"

        if (ok):
            config.set_config(server, "ocr_api_key", text_a)
            config.set_config(server, "ocr_secret_key", text_b)
            config.set_config(server, "access_token", "")
            config.set_config(server, "expires_in_date", 0)

        self.lb_msg_ocr.setText(msg)
